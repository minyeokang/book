var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
import * as React from "react";
import RowContext from "../row//rowContext";
import "./style/index.less";
const responsiveArray = ["lg", "md", "sm", "xs"];
/**
 * Col.
 */
export default class Col extends React.Component {
    render() {
        const _a = this.props, { children, span, pull, push, offset } = _a, others = __rest(_a, ["children", "span", "pull", "push", "offset"]);
        const classArray = [
            this.buildCss(span, ""),
            this.buildCss(pull, "pull-"),
            this.buildCss(push, "push-"),
            this.buildCss(offset, "offset-")
        ];
        const className = classArray.filter((x) => x.length > 0).join(" ");
        return (React.createElement(RowContext.Consumer, null, (gutter) => {
            let style = others.style;
            if (gutter > 0) {
                style = Object.assign({ paddingLeft: gutter / 2, paddingRight: gutter / 2 }, style);
            }
            return (React.createElement("div", Object.assign({}, others, { style: style, className: className }), children));
        }));
    }
    buildCss(css, classFragment) {
        let cssClass = "";
        const cssArray = [];
        if (typeof css === "number") {
            cssClass = `col-md-${classFragment}${css.toString()}`;
        }
        else if (typeof css === "object") {
            for (let i = 0; i < responsiveArray.length; i++) {
                const size = responsiveArray[i];
                if (css[size] !== undefined) {
                    cssArray.push(`col-${size}-${classFragment}${css[size].toString()}`);
                }
            }
            cssClass = cssArray.join(" ");
        }
        return cssClass;
    }
}
